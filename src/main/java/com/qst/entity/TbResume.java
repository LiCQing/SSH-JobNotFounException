package com.qst.entity;
// Generated 2019-8-5 19:53:09 by Hibernate Tools 5.1.10.Final

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.qst.util.JsonUtils;
import com.qst.vo.EducationExperience;
import com.qst.vo.ProjectExperience;
import com.qst.vo.WantedPosition;
import com.qst.vo.WordExperience;

/**
 * TbResume generated by hbm2java
 */
@Entity
@Table(name = "tb_resume")
public class TbResume implements java.io.Serializable {

	private int id;
	private Integer UId;
	
	private TbUser tbUser;
	
	private String workExperience;
	private String forwordJob;
	private String education;
	private String summary;
	private String skill;
	private Date updateTime;
	private String projectExperience;
	
	private List<WordExperience> wordExperiences;
	private List<WantedPosition> wantedPositions;
	private List<ProjectExperience>projectExperiences;
	private List<EducationExperience>educationExperiences;
	
	

	public TbResume() {
	}

	public TbResume(int id) {
		this.id = id;
	}

	public TbResume(int id, Integer UId, String workExperience, String forwordJob, String education, String summary,
			String skill, Date updateTime, String projectExperience) {
		this.id = id;
		this.UId = UId;
		this.workExperience = workExperience;
		this.forwordJob = forwordJob;
		this.education = education;
		this.summary = summary;
		this.skill = skill;
		this.updateTime = updateTime;
		this.projectExperience = projectExperience;
	}

	@Id

	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@Column(name = "u_id")
	public Integer getUId() {
		return this.UId;
	}

	public void setUId(Integer UId) {
		this.UId = UId;
	}

	@Column(name = "work_experience")
	public String getWorkExperience() {
		return this.workExperience;
	}

	public void setWorkExperience(String workExperience) {
		if(workExperience!=null){
			wordExperiences=JsonUtils.jsonToList(workExperience, WordExperience.class);
		}
		this.workExperience = workExperience;
	}

	@Column(name = "forword_job")
	public String getForwordJob() {
		return this.forwordJob;
	}

	public void setForwordJob(String forwordJob) {
		if(forwordJob!=null){
			wantedPositions = JsonUtils.jsonToList(forwordJob, WantedPosition.class);
		}
		this.forwordJob = forwordJob;
	}

	@Column(name = "education")
	public String getEducation() {
		return this.education;
	}

	public void setEducation(String education) {
		if(education!=null){
			educationExperiences = JsonUtils.jsonToList(education, EducationExperience.class);
		}
		this.education = education;
	}

	@Column(name = "summary")
	public String getSummary() {
		return this.summary;
	}

	public void setSummary(String summary) {
		this.summary = summary;
	}

	@Column(name = "skill")
	public String getSkill() {
		return this.skill;
	}

	public void setSkill(String skill) {
		this.skill = skill;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "update_time", length = 19)
	public Date getUpdateTime() {
		return this.updateTime;
	}

	public void setUpdateTime(Date updateTime) {
		this.updateTime = updateTime;
	}

	@Column(name = "project_experience")
	public String getProjectExperience() {
		return this.projectExperience;
	}

	public void setProjectExperience(String projectExperience) {
		if(projectExperience!=null){
			projectExperiences = JsonUtils.jsonToList(projectExperience, ProjectExperience.class);
		}
		this.projectExperience = projectExperience;
	}
	

	public List<WordExperience> getWordExperiences() {
		if(wordExperiences == null){
			return new ArrayList<>();
		}
		return wordExperiences;
	}

	public void setWordExperiences(List<WordExperience> wordExperiences) {
		this.wordExperiences = wordExperiences;
	}

	public List<WantedPosition> getWantedPositions() {
		if(wantedPositions == null){
			return new ArrayList<>();
		}
		return wantedPositions;
	}

	public void setWantedPositions(List<WantedPosition> wantedPositions) {
		this.wantedPositions = wantedPositions;
	}

	public List<ProjectExperience> getProjectExperiences() {
		if(projectExperiences == null){
			return new ArrayList<>();
		}
		return projectExperiences;
	}

	public void setProjectExperiences(List<ProjectExperience> projectExperiences) {
		this.projectExperiences = projectExperiences;
	}

	public List<EducationExperience> getEducationExperiences() {
		if(educationExperiences == null){
			return new ArrayList<>();
		}
		return educationExperiences;
	}

	public void setEducationExperiences(List<EducationExperience> educationExperiences) {
		this.educationExperiences = educationExperiences;
	}

	@Override
	public String toString() {
		return "TbResume [id=" + id + ", UId=" + UId + ", workExperience=" + workExperience + ", forwordJob="
				+ forwordJob + ", education=" + education + ", summary=" + summary + ", skill=" + skill
				+ ", updateTime=" + updateTime + ", projectExperience=" + projectExperience + "]";
	}

	public TbUser getTbUser() {
		return tbUser;
	}

	public void setTbUser(TbUser tbUser) {
		this.tbUser = tbUser;
	}

}
